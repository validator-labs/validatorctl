apiVersion: validation.spectrocloud.labs/v1alpha1
kind: AwsValidator
metadata:
  name: validator-plugin-aws-iam-base
  namespace: validator
spec:
  auth:
{{ .Auth }}
  defaultRegion: us-west-1
  iamRoleRules:
  - iamPolicies:
    - name: Controllers Policy
      statements:
      - actions:
        - "iam:DeleteOpenIDConnectProvider"
        - "iam:GetOpenIDConnectProvider"
        - "iam:ListOpenIDConnectProviders"
        - "iam:TagOpenIDConnectProvider"
        - "autoscaling:DescribeAutoScalingGroups"
        - "autoscaling:DescribeInstanceRefreshes"
        - "ec2:AllocateAddress"
        - "ec2:AssociateRouteTable"
        - "ec2:AttachInternetGateway"
        - "ec2:AuthorizeSecurityGroupIngress"
        - "ec2:CreateInternetGateway"
        - "ec2:CreateLaunchTemplate"
        - "ec2:CreateLaunchTemplateVersion"
        - "ec2:CreateNatGateway"
        - "ec2:CreateRoute"
        - "ec2:CreateRouteTable"
        - "ec2:CreateSecurityGroup"
        - "ec2:CreateSubnet"
        - "ec2:CreateTags"
        - "ec2:CreateVpc"
        - "ec2:DeleteInternetGateway"
        - "ec2:DeleteLaunchTemplate"
        - "ec2:DeleteLaunchTemplateVersions"
        - "ec2:DeleteNatGateway"
        - "ec2:DeleteRouteTable"
        - "ec2:DeleteSecurityGroup"
        - "ec2:DeleteSubnet"
        - "ec2:DeleteTags"
        - "ec2:DeleteVpc"
        - "ec2:DescribeAccountAttributes"
        - "ec2:DescribeAddresses"
        - "ec2:DescribeAvailabilityZones"
        - "ec2:DescribeImages"
        - "ec2:DescribeInstances"
        - "ec2:DescribeInternetGateways"
        - "ec2:DescribeKeyPairs"
        - "ec2:DescribeLaunchTemplates"
        - "ec2:DescribeLaunchTemplateVersions"
        - "ec2:DescribeNatGateways"
        - "ec2:DescribeNetworkInterfaceAttribute"
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:DescribeRouteTables"
        - "ec2:DescribeSecurityGroups"
        - "ec2:DescribeSubnets"
        - "ec2:DescribeVolumes"
        - "ec2:DescribeVpcAttribute"
        - "ec2:DescribeVpcs"
        - "ec2:DetachInternetGateway"
        - "ec2:DisassociateAddress"
        - "ec2:DisassociateRouteTable"
        - "ec2:ModifyInstanceAttribute"
        - "ec2:ModifyNetworkInterfaceAttribute"
        - "ec2:ModifySubnetAttribute"
        - "ec2:ModifyVpcAttribute"
        - "ec2:ReleaseAddress"
        - "ec2:ReplaceRoute"
        - "ec2:RevokeSecurityGroupIngress"
        - "ec2:RunInstances"
        - "ec2:TerminateInstances"
        - "elasticloadbalancing:AddTags"
        - "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
        - "elasticloadbalancing:ConfigureHealthCheck"
        - "elasticloadbalancing:CreateLoadBalancer"
        - "elasticloadbalancing:DeleteLoadBalancer"
        - "elasticloadbalancing:DeleteTargetGroup"
        - "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
        - "elasticloadbalancing:DescribeLoadBalancerAttributes"
        - "elasticloadbalancing:DescribeLoadBalancers"
        - "elasticloadbalancing:DescribeTags"
        - "elasticloadbalancing:ModifyLoadBalancerAttributes"
        - "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
        - "elasticloadbalancing:RemoveTags"
        - "iam:CreateOpenIDConnectProvider"
        - "tag:GetResources"
        effect: Allow
        resources:
        - "*"
      - actions:
        - "autoscaling:CreateAutoScalingGroup"
        - "autoscaling:UpdateAutoScalingGroup"
        - "autoscaling:CreateOrUpdateTags"
        - "autoscaling:StartInstanceRefresh"
        - "autoscaling:DeleteAutoScalingGroup"
        - "autoscaling:DeleteTags"
        effect: Allow
        resources:
        - "arn:*:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/*"
      - actions:
        - "iam:CreateServiceLinkedRole"
        condition:
          type: StringLike
          key: "iam:AWSServiceName"
          values:
          - autoscaling.amazonaws.com
        effect: Allow
        resources:
        - "arn:*:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
      - actions:
        - "iam:CreateServiceLinkedRole"
        condition:
          type: StringLike
          key: "iam:AWSServiceName"
          values:
          - elasticloadbalancing.amazonaws.com
        effect: Allow
        resources:
        - "arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing"
      - actions:
        - "iam:CreateServiceLinkedRole"
        condition:
          type: StringLike
          key: "iam:AWSServiceName"
          values:
          - spot.amazonaws.com
        effect: Allow
        resources:
        - "arn:*:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot"
      - actions:
        - "iam:PassRole"
        effect: Allow
        resources:
        - "arn:*:iam::*:role/*.cluster-api-provider-aws.sigs.k8s.io"
      - actions:
        - "secretsmanager:CreateSecret"
        - "secretsmanager:DeleteSecret"
        - "secretsmanager:TagResource"
        effect: Allow
        resources:
        - "arn:*:secretsmanager:*:*:secret:aws.cluster.x-k8s.io/*"
      - actions:
        - "s3:DeleteObject"
        - "s3:PutBucketOwnershipControls"
        - "s3:PutBucketPolicy"
        - "s3:PutBucketPublicAccessBlock"
        - "s3:PutObjectAcl"
        - "s3:PutObject"
        effect: Allow
        resources:
        - "arn:*:s3:::*"
      version: "2012-10-17"
    - name: Control Plane Policy
      statements:
      - actions:
        - "autoscaling:DescribeAutoScalingGroups"
        - "autoscaling:DescribeLaunchConfigurations"
        - "autoscaling:DescribeTags"
        - "ec2:DescribeInstances"
        - "ec2:DescribeImages"
        - "ec2:DescribeRegions"
        - "ec2:DescribeRouteTables"
        - "ec2:DescribeSecurityGroups"
        - "ec2:DescribeSubnets"
        - "ec2:DescribeVolumes"
        - "ec2:CreateSecurityGroup"
        - "ec2:CreateTags"
        - "ec2:CreateVolume"
        - "ec2:ModifyInstanceAttribute"
        - "ec2:ModifyVolume"
        - "ec2:AttachVolume"
        - "ec2:AuthorizeSecurityGroupIngress"
        - "ec2:CreateRoute"
        - "ec2:DeleteRoute"
        - "ec2:DeleteSecurityGroup"
        - "ec2:DeleteVolume"
        - "ec2:DetachVolume"
        - "ec2:RevokeSecurityGroupIngress"
        - "ec2:DescribeVpcs"
        - "elasticloadbalancing:AddTags"
        - "elasticloadbalancing:AttachLoadBalancerToSubnets"
        - "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
        - "elasticloadbalancing:CreateLoadBalancer"
        - "elasticloadbalancing:CreateLoadBalancerPolicy"
        - "elasticloadbalancing:CreateLoadBalancerListeners"
        - "elasticloadbalancing:ConfigureHealthCheck"
        - "elasticloadbalancing:DeleteLoadBalancer"
        - "elasticloadbalancing:DeleteLoadBalancerListeners"
        - "elasticloadbalancing:DescribeLoadBalancers"
        - "elasticloadbalancing:DescribeLoadBalancerAttributes"
        - "elasticloadbalancing:DetachLoadBalancerFromSubnets"
        - "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
        - "elasticloadbalancing:ModifyLoadBalancerAttributes"
        - "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
        - "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
        - "elasticloadbalancing:CreateListener"
        - "elasticloadbalancing:CreateTargetGroup"
        - "elasticloadbalancing:DeleteListener"
        - "elasticloadbalancing:DeleteTargetGroup"
        - "elasticloadbalancing:DescribeListeners"
        - "elasticloadbalancing:DescribeLoadBalancerPolicies"
        - "elasticloadbalancing:DescribeTargetGroups"
        - "elasticloadbalancing:DescribeTargetHealth"
        - "elasticloadbalancing:ModifyListener"
        - "elasticloadbalancing:ModifyTargetGroup"
        - "elasticloadbalancing:RegisterTargets"
        - "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
        - "iam:CreateServiceLinkedRole"
        - "kms:DescribeKey"
        effect: Allow
        resources:
        - "*"
      version: "2012-10-17"
    - name: Nodes Policy
      statements:
      - actions:
        - "ec2:DescribeInstances"
        - "ec2:DescribeRegions"
        - "ecr:GetAuthorizationToken"
        - "ecr:BatchCheckLayerAvailability"
        - "ecr:GetDownloadUrlForLayer"
        - "ecr:GetRepositoryPolicy"
        - "ecr:DescribeRepositories"
        - "ecr:ListImages"
        - "ecr:BatchGetImage"
        effect: Allow
        resources:
        - "*"
      - actions:
        - "secretsmanager:DeleteSecret"
        - "secretsmanager:GetSecretValue"
        effect: Allow
        resources:
        - "arn:*:secretsmanager:*:*:secret:aws.cluster.x-k8s.io/*"
      - actions:
        - "ssm:UpdateInstanceInformation"
        - "ssmmessages:CreateControlChannel"
        - "ssmmessages:CreateDataChannel"
        - "ssmmessages:OpenControlChannel"
        - "ssmmessages:OpenDataChannel"
        - "s3:GetEncryptionConfiguration"
        effect: Allow
        resources:
        - "*"
      version: "2012-10-17"
    - name: Deployment Policy
      statements:
      - actions:
        - "cloudformation:CreateStack"
        - "cloudformation:DescribeStacks"
        - "cloudformation:UpdateStack"
        - "ec2:CreateSnapshot"
        - "ec2:DeleteSnapshot"
        - "ec2:DescribeSnapshots"
        - "ec2:DescribeTags"
        - "ec2:DescribeVolumesModifications"
        - "ec2:DescribeKeyPairs"
        - "iam:AttachGroupPolicy"
        - "iam:CreatePolicy"
        - "iam:CreatePolicyVersion"
        - "iam:DeletePolicy"
        - "iam:DeletePolicyVersion"
        - "iam:DetachGroupPolicy"
        - "iam:GetGroup"
        - "iam:GetInstanceProfile"
        - "iam:GetPolicy"
        - "iam:GetUser"
        - "iam:ListPolicies"
        - "iam:ListPolicyVersions"
        - "pricing:GetProducts"
        - "sts:AssumeRole"
        - "sts:GetServiceBearerToken"
        - "iam:AddRoleToInstanceProfile"
        - "iam:AddUserToGroup"
        - "iam:CreateGroup"
        - "iam:CreateInstanceProfile"
        - "iam:CreateUser"
        - "iam:DeleteGroup"
        - "iam:DeleteInstanceProfile"
        - "iam:RemoveRoleFromInstanceProfile"
        - "iam:RemoveUserFromGroup"
        effect: Allow
        resources:
        - "*"
      version: "2012-10-17"
    iamRoleName: {{ .IamRoleName }}
